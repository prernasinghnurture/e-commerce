[
	{
		"title" : "AddUserScheme",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 0,
		"sql_stmt" : "insert into user_scheme (actor_id, actor_type, state_id, district_id, tehsil_id, village_id, scheme_id, scheme_quantity, payment_method,updated_by_actor_id, updated_by_actor_type,purchase_status,campaign_name,discount_id,cost) values (:actor_id, :actor_type, :state_id, :district_id, :tehsil_id, :village_id, :scheme_id, :scheme_quantity, :payment_method,:updated_by_actor_id, :updated_by_actor_type,:purchase_status,:campaign_name,:discount_id,:cost)",
		"sql_params" : "actor_id:user_scheme.actor_id,actor_type:user_scheme.actor_type,state_id:user_scheme.state_id, district_id:user_scheme.district_id, tehsil_id:user_scheme.tehsil_id, village_id:user_scheme.village_id,scheme_id:user_scheme.scheme_id,scheme_quantity:user_scheme.scheme_quantity,payment_method:ContractEnum.farm.nurture.core.contracts.common.PaymentMethod,updated_by_actor_id:user_scheme.actor_id,updated_by_actor_type:user_scheme.actor_type,purchase_status:ContractEnum.farm.nurture.core.contracts.common.PurchaseStatus,campaign_name:user_scheme.campaign_name,discount_id:user_scheme.discount_id,cost:user_scheme.cost",
		"sql_uniquekey" : 0,
		"impl_dao" : 1,
        "impl_grpc" : 1,
		"impl_grpc_metrics" : 0,
		"null_sql_replace" : 1,
		"sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "",
		"res_override" : "",
		"mutation" : "I",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "GetSchemeOnState",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 0,
		"sql_stmt" : "select id, scheme_name, district_id, state_id, cost, metadata, activated_on, expires_at, created_at, updated_at, sum_assured, insurance_premium, service_charge, geo_id, geo_type, scheme_type_id,default_cover_amount, assured_price, measurement_unit, is_visible, is_deleted FROM scheme where state_id = :state_id and activated_on > DATE(NOW())",
		"sql_params" : "state_id:scheme.state_id",
		"sql_uniquekey" : 0,
		"impl_dao" : 1,
        "impl_grpc" : 1,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
        "sql_replace" : "",
        "impl_reacrjs" : 0,
        "req_override" : "",
        "res_override" : "",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "GetUserSchemes",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 1,
		"sql_stmt" : "select us.actor_id, us.actor_type, us.created_at, us.scheme_quantity, us.scheme_id, us.state_id, us.district_id, us.tehsil_id, us.village_id, s.activated_on, s.expires_at, s.cost, us.updated_by_actor_id, us.updated_by_actor_type, us.payment_method  from user_scheme us inner join scheme s on us.scheme_id=s.id where us.actor_id = :actor_id and us.actor_type = :actor_type and s.expires_at >= DATE(NOW()) and us.is_active=1 and purchase_status = 'PAID' order by created_at desc",
		"sql_params" : "actor_id:user_scheme.actor_id,actor_type:user_scheme.actor_type",
		"sql_uniquekey" : 0,
		"impl_dao" : 1,
        "impl_grpc" : 1,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
        "sql_replace" : "",
        "impl_reacrjs" : 0,
        "req_override" : "",
        "res_override" : "",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "GetSchemeFaqOnSchemeId",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 1,
		"sql_stmt" : "select sf.id, sf.question, sf.answer, sf.created_at, sf.updated_at, sf.is_active from scheme_faq sf inner join scheme_faq_mapping sfm on sf.id=sfm.faq_id where sfm.scheme_id = :scheme_id and sf.is_active = 1 order by sfm.faq_rank",
		"sql_params" : "scheme_id:scheme_faq_mapping.scheme_id",
		"sql_uniquekey" : 0,
		"impl_dao" : 1,
        "impl_grpc" : 1,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
        "sql_replace" : "",
        "impl_reacrjs" : 0,
        "req_override" : "",
        "res_override" : "",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "GetSchemeDataOnState",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 0,
		"sql_stmt" : "",
		"sql_params" : "",
		"sql_uniquekey" : 0,
		"impl_dao" : 0,
        "impl_grpc" : 0,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
        "sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "int64 state_id = 3;",
		"res_override" : "repeated SchemeWithFAQ schemeWithFAQ = 5;} message MetaData { int64 contentId = 1; string title = 2; string description = 3;} message SchemeWithFAQ { int64 id = 1; string schemeName = 2; int64 districtId = 3; int64 stateId = 4; int64 cost = 5; MetaData metadata = 6; int64 activatedOn = 7; int64 expiresAt = 8; int64 createdAt = 9; int64 updatedAt = 10; repeated GetSchemeFaqOnSchemeIdResponseRecord getSchemeFaqOnSchemeIdResponse = 11;",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "EnterUserScheme",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 1,
		"sql_stmt" : "",
		"sql_params" : "",
		"sql_uniquekey" : 0,
		"impl_dao" : 0,
        "impl_grpc" : 0,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
        "sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "farm.nurture.core.contracts.common.ActorID actorDetails = 3;int64  state_id = 4;int64  districtId = 5;int64  tehsilId = 6;int64  villageId = 7;int64  schemeId = 8;int64  schemeQuantity = 9;int64  schemeCost = 10;farm.nurture.core.contracts.common.PaymentMethod paymentMethod =11;farm.nurture.core.contracts.common.ActorID updatedByActorDetails = 12;farm.nurture.core.contracts.common.PurchaseStatus purchaseStatus =13;",
		"res_override" : "int64  recordId = 4;",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "CheckIfWhitelistedReferrer",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 1,
		"sql_stmt" : "select wr.id, wr.phone_no, wr.code, wr.is_active, wr.name from whitelisted_referrers wr where wr.phone_no=:phone_no and wr.code=:code and wr.is_active=1",
		"sql_params" : "phone_no:whitelisted_referrers.phone_no,code:whitelisted_referrers.code",
		"sql_uniquekey" : 0,
		"impl_dao" : 0,
        "impl_grpc" : 0,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
        "sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "",
		"res_override" : "",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "CancelSchemeSignUp",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 1,
		"sql_stmt" : "update user_scheme set is_active=0, updated_by_actor_id=:updated_by_actor, updated_by_actor_type =:updated_by_actor where id=:id",
		"sql_params" : "id:user_scheme.id,updated_by_actor_id:user_scheme.updated_by_actor_id,updated_by_actor_type:updated_by_actor_type",
		"sql_uniquekey" : 0,
		"impl_dao" : 0,
        "impl_grpc" : 0,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
        "sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "int64 id=5;farm.nurture.core.contracts.common.PaymentMethod paymentMethod =6;farm.nurture.core.contracts.common.ActorID actorDetails=7;int64 UpdatedByActorId=8;farm.nurture.core.contracts.common.ActorType UpdatedByActorType =9;",
		"res_override" : "",
		"mutation" : "U",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "GetUserSchemeDetailsById",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 1,
		"sql_stmt" : "select us.id,us.actor_id,us.actor_type,us.scheme_id ,us.scheme_quantity,us.payment_method,s.cost,us.state_id,us.district_id,us.tehsil_id,us.village_id,us.created_at,us.purchase_status,us.earnings,us.payment_status,us.discount_id,us.cost as user_scheme_cost,s.activated_on,s.expires_at,s.sum_assured,st.name as scheme_type_name,st.image,scm.criteria,st.title_key as scheme_type_title_key,st.category,s.assured_price,s.measurement_unit from user_scheme us inner join scheme s on us.scheme_id=s.id inner join scheme_type st on st.id = s.scheme_type_id inner join scheme_criteria_mapping scm on scm.scheme_id = s.id where us.id=:id and us.is_active=1 and scm.is_active = 1 and st.is_deleted = 0",
		"sql_params" : "id:user_scheme.id",
		"sql_uniquekey" : 0,
		"impl_dao" : 0,
        "impl_grpc" : 0,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
        "sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "",
		"res_override" : "",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "GetSeasons",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 1,
		"sql_stmt" : "select distinct(s.id),s.title, s.start_date, s.end_date, s.is_active from seasons as s where s.id in (select s1.id from seasons as s1 inner join user_scheme as us on us.created_at >= s1.start_date and us.created_at < s1.end_date where (us.actor_id = :actor_id and us.actor_type = :actor_type)) or s.id in (select s1.id from seasons  as s1 inner join scheme as sc on sc.activated_on >= s1.start_date and sc.activated_on < s1.end_date where sc.state_id = :state_id and sc.activated_on > DATE(NOW()))   order by s.start_date asc;",
		"sql_params" : "actor_id:user_scheme.actor_id,actor_type:user_scheme.actor_type,state_id:scheme.state_id",
		"sql_uniquekey" : 0,
		"impl_dao" : 0,
        "impl_grpc" : 0,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
        "sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "",
		"res_override" : "",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "GetSchemeEarnings",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 1,
		"sql_stmt" : "select scm.scheme_id, us.earnings, us.payment_status, us.bank_details, us.village_id, us.scheme_quantity, sc.activated_on, sc.expires_at, scm.criteria  from seasons as s inner join user_scheme as us on us.created_at >= s.start_date and us.created_at < s.end_date inner join scheme as sc on sc.id= us.scheme_id inner join  scheme_criteria_mapping scm on scm.scheme_id= sc.id where s.id = :id and us.actor_id = :actor_id and us.actor_type = :actor_type and scm.is_active=1 and us.is_active=1 and us.purchase_status='PAID' order by us.village_id asc",
		"sql_params" : "id:seasons.id,actor_id:user_scheme.actor_id,actor_type:user_scheme.actor_type",
		"sql_uniquekey" : 0,
		"impl_dao" : 0,
        "impl_grpc" : 0,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
        "sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "",
		"res_override" : "repeated VillageSchemeDetails villageMapping =5;repeated GetSchemeEarningsResponseRecord records=6;}\nmessage VillageSchemeDetails{int64 villageId=4; repeated UserSchemeDetail details = 5;} message UserSchemeDetail{int64 earnings =1; PaymentStatus paymentStatus =2; string bankDetails =3; int64 activatedOn =4; int64 expiresAt = 5;int64 schemeQuantity =6; string criteria =7; int64 schemeId =8;}\nenum PaymentStatus{ INITIATED =0; TRANSFERRED =1;",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "GetSchemeCriteriaOnSchemeId",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 1,
		"sql_stmt" : "select sc.id, sc.scheme_id, sc.criteria, sc.created_at, sc.updated_at, sc.is_active from scheme_criteria_mapping sc inner join scheme as s on sc.scheme_id=s.id where sc.scheme_id = :scheme_id and sc.is_active = 1",
		"sql_params" : "scheme_id:scheme_criteria_mapping.scheme_id",
		"sql_uniquekey" : 0,
		"impl_dao" : 0,
        "impl_grpc" : 0,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
        "sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "",
		"res_override" : "",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "GetSchemeDataBySchemeId",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 1,
		"sql_stmt" : "",
		"sql_params" : "",
		"sql_uniquekey" : 0,
		"impl_dao" : 1,
        "impl_grpc" : 1,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
        "sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "int64 scheme_id = 3;",
		"res_override" : "GetSchemeDataOnStateResponse response = 4;",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "GetSchemeOnId",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 1,
		"sql_stmt" : "select id, scheme_name, district_id, state_id, cost, metadata, activated_on, expires_at, created_at, updated_at, sum_assured, insurance_premium, service_charge, geo_id, geo_type, scheme_type_id, default_cover_amount,assured_price, measurement_unit, is_visible, is_deleted from scheme where id = :id",
		"sql_params" : "id:scheme.id",
		"sql_uniquekey" : 0,
		"impl_dao" : 1,
        "impl_grpc" : 1,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
        "sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "",
		"res_override" : "",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "UpdatePurchaseStatusById",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 1,
		"sql_stmt" : "update user_scheme set purchase_status=:purchase_status, updated_by_actor_id=:updated_by_actor, updated_by_actor_type =:updated_by_actor_type where id=:id",
		"sql_params" : "purchase_status:user_scheme.purchase_status,updated_by_actor_id:user_scheme.updated_by_actor_id,updated_by_actor_type:updated_by_actor_type,id:user_scheme.id,",
		"sql_uniquekey" : 0,
		"impl_dao" : 1,
        "impl_grpc" : 1,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
        "sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "int64 id=5;\nfarm.nurture.core.contracts.common.PaymentMethod paymentMethod =6;\nfarm.nurture.core.contracts.common.ActorID actorDetails=7;\nint64 UpdatedByActorId=8;\nfarm.nurture.core.contracts.common.ActorType UpdatedByActorType =9;\nfarm.nurture.core.contracts.common.PurchaseStatus purchaseStatus =10;",
		"res_override" : "",
		"mutation" : "U",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "GenerateInvoiceCron",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 1,
		"sql_stmt" : "",
		"sql_params" : "",
		"sql_uniquekey" : 0,
		"impl_dao" : 1,
        "impl_grpc" : 1,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
        "sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "",
		"res_override" : "",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "AddInvoice",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 1,
		"sql_stmt" : "insert into invoices (user_scheme_id, invoice_number, service_type, uploaded_path) values (:user_scheme_id, :invoice_number, :service_type, :uploaded_path)",
		"sql_params" : "user_scheme_id:invoices.user_scheme_id,invoice_number:invoices.invoice_number,service_type:invoices.service_type, uploaded_path:invoices.uploaded_path",
		"sql_uniquekey" : 0,
		"impl_dao" : 1,
        "impl_grpc" : 1,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
        "sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "",
		"res_override" : "",
		"mutation" : "I",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "GetInvoiceByUserSchemeId",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 1,
		"sql_stmt" : "select id, user_scheme_id, invoice_number, service_type, uploaded_path, created_at, updated_at from invoices where user_scheme_id = :user_scheme_id",
		"sql_params" : "user_scheme_id:invoices.user_scheme_id",
		"sql_uniquekey" : 1,
		"impl_dao" : 1,
        "impl_grpc" : 1,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
        "sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "",
		"res_override" : "",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "GetMostRecentInvoiceByServiceType",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 1,
		"sql_stmt" : "select id, user_scheme_id, invoice_number, service_type, uploaded_path, created_at, updated_at FROM invoices where service_type = :service_type order by created_at desc limit 1",
		"sql_params" : "service_type:invoices.service_type",
		"sql_uniquekey" : 1,
		"impl_dao" : 1,
        "impl_grpc" : 1,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
        "sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "",
		"res_override" : "",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "AddCron",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 1,
		"sql_stmt" : "insert into cron (job_name, status, start_time) values (:job_name, :status, :start_time)",
		"sql_params" : "job_name:cron.job_name,status:cron.status,start_time:cron.start_time",
		"sql_uniquekey" : 0,
		"impl_dao" : 1,
        "impl_grpc" : 1,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
        "sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "",
		"res_override" : "",
		"mutation" : "I",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "UpdateCron",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 1,
		"sql_stmt" : "update cron set status = :status, end_time = :end_time, metadata = :metadata, updated_at = now() where id = :id",
		"sql_params" : "status:cron.status,end_time:cron.end_time,metadata:cron.metadata,id:cron.id",
		"sql_uniquekey" : 1,
		"impl_dao" : 1,
        "impl_grpc" : 1,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
        "sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "",
		"res_override" : "",
		"mutation" : "U",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "GetCronById",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 1,
		"sql_stmt" : "select id, job_name, status, start_time, end_time, metadata, created_at, updated_at from cron where id = :id",
		"sql_params" : "id:cron.id",
		"sql_uniquekey" : 1,
		"impl_dao" : 1,
        "impl_grpc" : 1,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
        "sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "",
		"res_override" : "",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "GetLastCronDetails",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 1,
		"sql_stmt" : "select id, job_name, status, start_time, end_time, metadata, created_at, updated_at FROM cron where job_name = :job_name order by created_at desc limit 1",
		"sql_params" : "job_name:cron.job_name",
		"sql_uniquekey" : 1,
		"impl_dao" : 1,
        "impl_grpc" : 1,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
        "sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "",
		"res_override" : "",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "GetActiveUserSchemesByPaymentMethodPurchaseStatusAndCreatedDate",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 0,
		"sql_stmt" : "select id, actor_id, state_id, district_id, tehsil_id, village_id, scheme_id, scheme_quantity, created_at, payment_method, cost, discount_id from user_scheme where created_at >= FROM_UNIXTIME(:createdAtStartSeconds) and created_at < FROM_UNIXTIME(:createdAtEndSeconds) and actor_type = :actor_type and payment_method in (@paymentmethod@) and purchase_status = :purchase_status and is_active = 1;",
		"sql_params" : "createdAtStartSeconds:int64,createdAtEndSeconds:int64, actor_type:user_scheme.actor_type, purchase_status:user_scheme.purchase_status",
		"sql_uniquekey" : 0,
		"impl_dao" : 1,
        "impl_grpc" : 1,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 0,
		"sql_replace" : "paymentmethod:repeated string",
		"impl_reacrjs" : 0,
		"req_override" : "",
		"res_override" : "",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "GetSchemesByIds",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 0,
		"sql_stmt" : "select id, scheme_name, district_id, state_id, cost, metadata, activated_on, expires_at, created_at, updated_at, sum_assured, insurance_premium, service_charge from scheme where id in (@ids@)",
		"sql_params" : "",
		"sql_uniquekey" : 0,
		"impl_dao" : 1,
        "impl_grpc" : 1,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 0,
		"sql_replace" : "ids:repeated int64",
		"impl_reacrjs" : 0,
		"req_override" : "",
		"res_override" : "",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "GenerateInvoicePdfByUserSchemeIds",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 0,
		"sql_stmt" : "",
		"sql_params" : "",
		"sql_uniquekey" : 0,
		"impl_dao" : 1,
        "impl_grpc" : 1,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
		"sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "repeated int64 userSchemeIds = 4;",
		"res_override" : "repeated int64 failedUserSchemeIds = 4;\n  repeated int64 whiteListedUserSchemeIds = 5; int32 totalSuccessUploadCount = 6;",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "GetUserSchemesByIds",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 1,
		"sql_stmt" : "select id, actor_id, state_id, district_id, tehsil_id, village_id, scheme_id, scheme_quantity, created_at, payment_method from user_scheme where id in (@ids@)",
		"sql_params" : "",
		"sql_uniquekey" : 0,
		"impl_dao" : 1,
        "impl_grpc" : 1,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 0,
		"sql_replace" : "ids:repeated int64",
		"impl_reacrjs" : 0,
		"req_override" : "",
		"res_override" : "",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "GetLastCronByStatusAndJobName",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 0,
		"sql_stmt" : "select id, job_name, status, start_time, end_time, metadata, created_at, updated_at FROM cron where job_name = :job_name and status = :status order by created_at desc limit 1",
		"sql_params" : "job_name:cron.job_name, status:cron.status",
		"sql_uniquekey" : 1,
		"impl_dao" : 1,
        "impl_grpc" : 1,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
		"sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "",
		"res_override" : "",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "GetDiscountsByEntityTypeAndEntityId",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 0,
		"sql_stmt" : "select id,name,quantity,discount,discount_type,created_at,updated_at from discounts where is_deleted = 0 and entity_type = :entity_type and entity_id = :entity_id",
		"sql_params" : "entity_type:discounts.entity_type,entity_id:discounts.entity_id",
		"sql_uniquekey" : 0,
		"impl_dao" : 1,
        "impl_grpc" : 1,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
		"sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "",
		"res_override" : "",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	},
	{
		"title" : "GetDiscountsById",
		"req_name" : "",
		"res_name" : "",
		"decl_req" : 1,
		"decl_res" : 1,
		"decl_grpc" : 1,
		"decl_grapql" : 0,
		"sql_stmt" : "select id,name,quantity,discount,discount_type,entity_type,entity_id,is_deleted,created_at,updated_at from discounts where id = :id",
		"sql_params" : "id:discounts.id",
		"sql_uniquekey" : 1,
		"impl_dao" : 1,
        "impl_grpc" : 1,
        "impl_grpc_metrics" : 0,
        "null_sql_replace" : 1,
		"sql_replace" : "",
		"impl_reacrjs" : 0,
		"req_override" : "",
		"res_override" : "",
		"mutation" : "S",
		"oauth_public" : 1,
		"oauth_claims" : "",
		"status" : 1
	}
]
